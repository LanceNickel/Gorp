#!/usr/bin/env bash

### [GORP] ########################################################
#   Description:  Main Gorp launcher.
#   Parameters:   1: (required) Action
#                 2: (optional) Argument 1
#                 3: (optional) Argument 2

############################ [WARNING] ############################
##    No part of this script is designed to be user-editable.    ##
##   This script is OVERWRITTEN any time a Gorp update is run.   ##
###################################################################



#### GUARDS ################

### ROOT GUARD

if [[ "$EUID" == 0 ]]; then
    echo "Please don't run as root or with sudo. Exit (10)."
    exit 10
fi







#### SCRIPT PARAMETERS

source /usr/local/bin/gorpmc/worker/i_getconfigparams.sh

if [[ "$1" == "-q" ]]; then
    TESTSTRING=pleaseshutup
    ACTION=$2
    ARG1=$3
    ARG2=$4

elif [[ "$1" == "-Q" ]]; then
    TESTSTRING=pleasebesilent
    ACTION=$2
    ARG1=$3
    ARG2=$4

else
    TESTSTRING=pleasedontdothis
    ACTION=$1
    ARG1=$2
    ARG2=$3
fi







####







### PARAMS RT-GUARD

if [[ "$GAMEVER" == "" ]] || [[ "$RAM" == "" ]] || [[ "$HOMEDIR" == "" ]] || [[ "$BACKUP_DEST" == "" ]] || [[ "$ARCHIVE_DEST" == "" ]] || [[ "$LATEST_JAR" == "" ]]; then
    echo "gorp: One or more required options in gorp.conf not set. Exit (15)."
    exit 15
fi







### ACTIONS

if [[ "$ACTION" == "backup-world" ]]; then
    /usr/local/bin/gorpmc/action/mcbackupworld $TESTSTRING $ARG1

elif [[ "$ACTION" == "backup-server" ]]; then
    /usr/local/bin/gorpmc/action/mcbackupserver $TESTSTRING $ARG1

elif [[ "$ACTION" == "restore-world" ]]; then
    /usr/local/bin/gorpmc/action/mcrestoreworld $TESTSTRING $ARG1

elif [[ "$ACTION" == "restore-server" ]]; then
    /usr/local/bin/gorpmc/action/mcrestoreserver $TESTSTRING $ARG1

elif [[ "$ACTION" == "update-jar" ]]; then
    /usr/local/bin/gorpmc/action/mcupdatejar $TESTSTRING

elif [[ "$ACTION" == "get-jar" ]]; then
    /usr/local/bin/gorpmc/action/mcgetjar $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "create-server" ]]; then
    /usr/local/bin/gorpmc/action/mccreateserver $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "delete-server" ]]; then
    /usr/local/bin/gorpmc/action/mcdeleteserver $TESTSTRING $ARG1

elif [[ "$ACTION" == "create-world" ]]; then
    /usr/local/bin/gorpmc/action/mccreateworld $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "delete-world" ]]; then
    /usr/local/bin/gorpmc/action/mcdeleteworld $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "reset-world" ]]; then
    /usr/local/bin/gorpmc/action/mcresetworld $TESTSTRING $ARG1

elif [[ "$ACTION" == "archive-world" ]]; then
    /usr/local/bin/gorpmc/action/mcarchiveworld $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "switch-world" ]]; then
    /usr/local/bin/gorpmc/action/mcswitchworld $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "power" ]]; then
    /usr/local/bin/gorpmc/action/mcpower $TESTSTRING

elif [[ "$ACTION" == "start" ]]; then
    /usr/local/bin/gorpmc/action/mcstart $TESTSTRING $ARG1

elif [[ "$ACTION" == "stop" ]]; then
    /usr/local/bin/gorpmc/action/mcstop $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "restart" ]]; then
    /usr/local/bin/gorpmc/action/mcrestart $TESTSTRING $ARG1 $ARG2

elif [[ "$ACTION" == "help" ]]; then
    /usr/local/bin/gorpmc/action/gorphelp

elif [[ "$ACTION" == "upgrade" ]]; then
    /usr/local/bin/gorpmc/action/gorpupgrade $TESTSTRING

elif [[ "$ACTION" == "-v" ]]; then
    /usr/local/bin/gorpmc/action/gorpversion

elif [[ "$ACTION" == "-s" ]]; then
    /usr/local/bin/gorpmc/action/mcserverstatus $TESTSTRING $ARG1

elif [[ "$ACTION" == "-f" ]]; then
    tail -f $HOMEDIR/servers/$ARG1/logs/latest.log

elif [[ "$ACTION" == "list-servers" ]]; then
    echo $(ls $HOMEDIR/servers)

elif [[ "$ACTION" == "move-home" ]]; then
    /usr/local/bin/gorpmc/action/gorpmovehome $TESTSTRING $ARG1

else
    echo "Invalid parameters. Use gorp help for more information."
fi