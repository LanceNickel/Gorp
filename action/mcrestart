#!/usr/bin/env bash

### [ACTION: RESTART] #############################################
#   Description:  Restart a server instance.
#   Parameters:   1: (required) Server directory name
#   Flags:        -f fast (skip backup)
#                 -n now  (skip backup and warning)

############################ [WARNING] ############################
##    No part of this script is designed to be user-editable.    ##
##   This script is OVERWRITTEN any time a Gorp update is run.   ##
###################################################################

# Copyright (C) Lance Nickel 2023.
# Distributed under GNU GPL v3.
# <https://gorp.lanickel.com/license/>



#### SETUP ############

#### Key guard

if [[ "$1" == "pleasedontdothis" ]]; then
    handle_error "Script not meant to be run directly."
fi



#### Globals

source /usr/local/bin/gorpmc/functions/exit.sh
source /usr/local/bin/gorpmc/functions/params.sh
source /usr/local/bin/gorpmc/functions/functions.sh



#### Collect arguments & additional variables

SERVER=$2
MODE=$3







####







#### GUARDS ############

#### Bad user input

if [[ "$SERVER" = "" ]] || [[ "$SERVER" == "fast" ]] || [[ "$SERVER" == "now" ]]; then
    handle_error "Bad input. Expected: gorp restart [server] <fast|now>"
fi

if [[ "$MODE" != "fast" ]] && [[ "$MODE" != "now" ]]; then
    handle_error "Bad input. Expected: gorp restart [server] <fast|now>"
fi



#### Server not found

if [[ "$(does_server_exist)" == "false" ]]; then
    handle_error "Server not found."
fi



#### Server is not running

if [[ "$(is_server_running)" == "false" ]]; then
        handle_error "Server is not running."
fi







#### COORDINATE WORKERS ############

#### Fast restart (no backup)

if [[ "$MODE" == "fast" ]]; then
    bash /usr/local/bin/gorpmc/worker/warning.sh $1 $SERVER "restart" || handle_error "Failed to run warning.sh worker"
    bash /usr/local/bin/gorpmc/worker/shutdown.sh $1 $SERVER || handle_error "Failed to run shutdown.sh worker"
    bash /usr/local/bin/gorpmc/worker/start.sh $1 $SERVER || handle_error "Failed to run start.sh worker"



#### Now restart (no warning or backup)

elif [[ "$MODE" == "now" ]]; then
    bash /usr/local/bin/gorpmc/worker/shutdown.sh $1 $SERVER || handle_error "Failed to run shutdown.sh worker"
    bash /usr/local/bin/gorpmc/worker/start.sh $1 $SERVER || handle_error "Failed to run start.sh worker"



#### Normal restart (no/unrecognized param)

else
    bash /usr/local/bin/gorpmc/worker/backupworld.sh $1 $SERVER || handle_error "Failed to run backupworld.sh worker"
    bash /usr/local/bin/gorpmc/worker/warning.sh $1 $SERVER "restart" || handle_error "Failed to run warning.sh worker"
    bash /usr/local/bin/gorpmc/worker/shutdown.sh $1 $SERVER || handle_error "Failed to run shutdown.sh worker"
    bash /usr/local/bin/gorpmc/worker/start.sh $1 $SERVER || handle_error "Failed to run start.sh worker"
fi