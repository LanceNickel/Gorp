#!/usr/bin/env bash

### [ACTION: ARCHIVE-WORLD] #######################################
#   Description:  Compress and move world to $ARCHIVE_DEST.
#   Parameters:   1: (required) Server directory name
#                 2: (optional) World (level) name to archive

############################ [WARNING] ############################
##    No part of this script is designed to be user-editable.    ##
##   This script is OVERWRITTEN any time a Gorp update is run.   ##
###################################################################

# Copyright (C) Lance Nickel 2023.
# Distributed under GNU GPL v3.
# <https://gorp.lanickel.com/license/>



#### SETUP ############

#### Globals

source /usr/local/bin/gorpmc/functions/exit.sh
source /usr/local/bin/gorpmc/functions/params.sh
source /usr/local/bin/gorpmc/functions/functions.sh



#### Key guard

if [[ "$1" == "pleasedontdothis" ]]; then
    handle_error "Script not meant to be run directly."
fi



#### Collect arguments & additional variables

SERVER=$2
WORLD_TO_ARCHIVE=$3







####







#### GUARDS ############

#### Bad input from user

if [[ "$SERVER" == "" ]]; then
    handle_error "Bad input. Expected: 'gorp archive-world [server-name] <world-name>."
fi



#### Server not found

if [[ "$(does_server_exist)" == "false" ]]; then
    handle_error "Server not found."
fi



#### Server has no worlds

if [[ $(ls $HOMEDIR/servers/$SERVER/ | grep 'world') == "" ]]; then
    handle_error "No worlds exist on this server."
fi



#### Server cannot be running

if [[ "$(is_server_running)" == "true" ]]; then
        handle_error "Server cannot be running."
fi



#### World specified by user does not exist.

if [[ "$WORLD_TO_ARCHIVE" != "" ]]; then

    if [[ ! -d "$HOMEDIR/servers/$SERVER/world-$WORLD_TO_ARCHIVE" ]]; then
        handle_error "World not found."
    fi

fi







#### RUN WORLD ARCHIVE WORKER #############

bash /usr/local/bin/gorpmc/worker/archiveworld.sh $1 $SERVER $WORLD_TO_ARCHIVE || handle_error "Failed to run archiveworld.sh worker."