#!/usr/bin/env bash

### [ACTION: GORP UPGRADE] ########################################
#   Description:  Upgrade Gorp.
#   Parameters:   None

############################ [WARNING] ############################
##    No part of this script is designed to be user-editable.    ##
##   This script is OVERWRITTEN any time a Gorp update is run.   ##
###################################################################



#### GUARDS ################

### KEY GUARD

if [[ "$1" == "pleasedontdothis" ]]; then
    OUTPUT=true
    ERRORS=true

elif [[ "$1" == "pleaseshutup" ]]; then
    OUTPUT=false
    ERRORS=true

elif [[ "$1" == "pleasebesilent" ]]; then
    OUTPUT=false
    ERRORS=false

else
    if $ERRORS; then echo "gorpupgrade: Not intended to be run directly. Exit (13)."; fi
    exit 13
fi







#### SCRIPT PARAMETERS ################

source /usr/local/bin/gorpmc/worker/i_getconfigparams.sh

INSTALLED=$(gorp -v | cut -d ' ' -f3)
LATEST_TAG=$(curl -s https://api.github.com/repos/LanceNickel/Gorp/releases/latest | jq -r .tag_name)
LATEST_VER=$(echo $LATEST_TAG | cut -c 2-); fi







####







### DO WE EVEN NEED TO UPGRADE?

if [[ "$INSTALLED" == "$LATEST_VER" ]]; then
    if $OUTPUT; then echo "Gorp is already on the latest version."; fi
    exit 0
fi







### GET SUDO PERMISSIONS RT-GUARD

if $OUTPUT; then echo "To upgrade, Gorp will use sudo."; fi
sudo whoami > /dev/null







### TEMP DIRECTORY

rm -rf $HOMEDIR/tmp/
mkdir -p $HOMEDIR/tmp/







### DOWNLOAD THE LATEST RELEASE

if $OUTPUT; then echo "Downloading latest release..."; fi

cd $HOMEDIR/tmp/
wget -q https://github.com/LanceNickel/Gorp/archive/refs/tags/$LATEST_TAG.tar.gz

tar -xf $LATEST_TAG.tar.gz > /dev/null

mkdir -p ./updatefiles/
mv ./Gorp-$LATEST_VER/* ./updatefiles/









### RUN UPDATE WORKER

chmod +x $HOMEDIR/tmp/updatefiles/upgrade.sh
$HOMEDIR/tmp/updatefiles/upgrade.sh $1







### CLEAN UP

rm -rf $HOMEDIR/tmp/