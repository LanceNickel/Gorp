#!/usr/bin/env bash

### [ACTION: GORP UPGRADE] ########################################
#   Description:  Upgrade Gorp.
#   Parameters:   None

############################ [WARNING] ############################
##    No part of this script is designed to be user-editable.    ##
##   This script is OVERWRITTEN any time a Gorp update is run.   ##
###################################################################

# Copyright (C) Lance Nickel 2023.
# Distributed under GNU GPL v3.
# <https://gorp.lanickel.com/license/>



#### GUARDS ################

### KEY GUARD

if [[ "$1" == "pleasedontdothis" ]]; then
    handle_error "Script not meant to be run directly."
fi







#### SCRIPT PARAMETERS ################

I_VERSION=$(grep 'Gorp version' /usr/local/etc/gorp.conf | cut -d ':' -f2 | cut -d ' ' -f3)







####







### TEMP DIRECTORY

rm -rf $HOMEDIR/tmp/
mkdir -p $HOMEDIR/tmp/







### GET & STORE RELEASE INFORMATION

cd $HOMEDIR/tmp/
wget -q https://raw.githubusercontent.com/LanceNickel/Gorp/main/release



# Store

R_SHA256=$(grep 'SHA256=' release | cut -d '=' -f2)
R_MD5=$(grep 'MD5=' release | cut -d '=' -f2)
R_VERSION=$(grep 'V=' release | cut -d '=' -f2)








### DO WE EVEN NEED TO UPGRADE?

if [[ "$I_VERSION" == "$R_VERSION" ]]; then
    echo "No need to upgrade, already on latest available version."
    exit 0
fi







### GET SUDO PERMISSIONS RT-GUARD

echo "To upgrade, Gorp will use sudo."
sudo whoami > /dev/null







### DOWNLOAD & VERIFY THE LATEST RELEASE

echo "Downloading latest release..."

cd $HOMEDIR/tmp/
wget -q https://gorp.lanickel.com/latest.tar.gz



# Checksums

L_SHA256=$(sha256sum latest.tar.gz)
L_MD5=$(md5sum latest.tar.gz)



# sha256 comparison

if [[ "$L_SHA256" != "$R_SHA256" ]] || [[ "$L_MD5" != "$R_MD5" ]]; then
    handle_error "Downloaded checksum does not match remote."
fi







### UNPACK TAR

tar -xf latest.tar.gz > /dev/null || handle_error "Unable to unarchive downloaded files."

mv ./latest/ ./updatefiles/







### RUN UPDATE WORKER

chmod +x $HOMEDIR/tmp/updatefiles/upgrade.sh || handle_error "Unable to give +x upgrade.sh file."
$HOMEDIR/tmp/updatefiles/upgrade.sh $1 || handle_error "Unable to run upgrade.sh file."







### CLEAN UP

rm -rf $HOMEDIR/tmp/